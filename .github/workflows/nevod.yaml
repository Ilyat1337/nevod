name: NuGet package and Negrep

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

jobs: 
  test-nevod:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.x
      - name: Test
        run: |
          dotnet test Source/Engine.Tests/Nezaboodka.Nevod.Engine.Tests.csproj -c Release --verbosity normal --test-adapter-path:. \
            --logger:"junit;LogFilePath=..\..\Build\TestResults\{assembly}-test-result.xml;MethodFormat=Class;FailureBodyFormat=Verbose"
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: Build/TestResults/*-test-result.xml

  test-negrep:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.x
      - name: Test
        run: |
          dotnet test Source/Negrep.Tests/Nezaboodka.Nevod.Negrep.Tests.csproj -c Release --verbosity normal --test-adapter-path:. \
            --logger:"junit;LogFilePath=..\..\Build\TestResults\{assembly}-test-result.xml;MethodFormat=Class;FailureBodyFormat=Verbose"
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: Build/TestResults/*-test-result.xml
  
  build-negrep-artifacts:
    runs-on: ubuntu-latest
    needs:
      - test-nevod
      - test-negrep
    strategy:
      matrix:
        target-os: [ "linux_x64", "windows_x64", "windows_x86" ]
    env:
      NV_DOCK_TAG: github
    steps:
      - uses: actions/checkout@v2
      - run: chmod +x ./Deployment/publish.sh
      - run: ./Deployment/publish.sh ${{ matrix.target-os }}
        shell: sh
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.target-os }}
          path: Publish/

  test-negrep-zip-package:
    runs-on: ubuntu-latest
    needs: build-negrep-artifacts
    strategy:
      matrix:
        target-os: [ "centos_x64", "ubuntu_x64" ]
    env:
      NV_DOCK_TAG: github
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: linux_x64
          path: Publish
      - run: chmod +x ./Deployment/smoke_test.sh
      - run: ./Deployment/smoke_test.sh ${{ matrix.target-os }}
        shell: sh
  
  test-negrep-deb-package:
    runs-on: ubuntu-latest
    needs: build-negrep-artifacts
    env:
      NV_DOCK_TAG: github
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: linux_x64
          path: Publish
      - run: chmod +x ./Deployment/test_packages.sh
      - run: ./Deployment/test_packages.sh
        shell: sh

  publish-nevod-nuget-package:
    runs-on: ubuntu-latest
    needs: 
      - test-negrep-zip-package
      - test-negrep-deb-package
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.x
      - name: Set VERSION variable from tag
        run: echo "VERSION=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV
      - name: Build
        run: dotnet build Source/Engine/Nezaboodka.Nevod.Engine.csproj --configuration Release /p:Version=${VERSION}
      - name: Pack
        run: dotnet pack Source/Engine/Nezaboodka.Nevod.Engine.csproj --configuration Release /p:Version=${VERSION} --no-build --output .
      - name: Push
        run: dotnet nuget push Nezaboodka.Nevod.${VERSION}.nupkg --source https://api.nuget.org/v3/index.json --api-key ${NEVOD_NUGET_TOKEN}
        env:
          NEVOD_NUGET_TOKEN: ${{ secrets.NEVOD_NUGET_TOKEN }}
